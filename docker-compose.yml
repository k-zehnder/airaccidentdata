version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_ENV
      - AUTH0_SECRET
      - AUTH0_BASE_URL
      - AUTH0_AUDIENCE
      - AUTH0_ISSUER_BASE_URL
      - AUTH0_CLIENT_ID
      - AUTH0_CLIENT_SECRET
      - BUCKET_URL
      - ZAPI_KEY
      - STRIPE_API_KEY

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - MYSQL_DSN
      - SERVER_ADDRESS
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:latest
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 3306:3306
    volumes:
      - /home/shannon/mysql_data:/var/lib/mysql
    networks:
      - app-network
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_HOST
      - MYSQL_PORT
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

networks:
  app-network:

volumes:
  mysql_airaccidentdata:
    driver: local
